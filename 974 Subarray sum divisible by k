#include <vector>
#include <unordered_map>
using namespace std;

class Solution {
public:
    int subarraysDivByK(vector<int>& nums, int k) {
        unordered_map<int, int> modCount;
        modCount[0] = 1; // prefix sum remainder 0 occurs once initially

        int prefixSum = 0;
        int result = 0;
        
        for (int num : nums) {
            prefixSum += num;
            // Ensure positive modulo result
            int mod = ((prefixSum % k) + k) % k;
            
            if (modCount.find(mod) != modCount.end()) {
                result += modCount[mod];
            }
            modCount[mod]++;
        }
        
        return result;
    }
};
